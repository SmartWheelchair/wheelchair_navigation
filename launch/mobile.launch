<launch>
    <include file="$(find openni2_launch)/launch/openni2.launch"/> 

    <include file="$(find kobuki_node)/launch/minimal.launch"/>

    <include file="$(find amcl)/examples/amcl_diff.launch"/>

    <node pkg="gmapping_navigation" type="global.py" name="service_client" output="screen" />
    
    <arg name="map_file" default="$(find robot_setup_tf)/map/map1.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <node pkg="gmapping_navigation" type="tf_broadcaster" name="robot_tf_publisher" output="screen" />

    <node pkg="gmapping_navigation" type="tf_listener" name="robot_tf_listener" output="screen" /> 

    <!--- Depth image to laser scan -->
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
        <param name="scan_height" value="3"/> 
        <param name="output_frame_id" value="base_link"/>
        <remap from="image" to="camera/depth/image" />
    </node>


    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find robot_setup_tf)/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find robot_setup_tf)/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find robot_setup_tf)/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find robot_setup_tf)/global_costmap_params.yaml" command="load" /> 
        <rosparam file="$(find robot_setup_tf)/base_local_planner_params.yaml" command="load" />
    </node>

    <node pkg="rviz" name="rviz" type="rviz" output="screen" />

    <node pkg="gmapping_navigation" type="save_location" name="map_location" output="screen" cwd="node" />

    

</launch>
